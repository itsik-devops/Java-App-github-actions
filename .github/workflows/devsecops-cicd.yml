name: Complete DevSecOps CI/CD pipeline

on:
  push:
    branches:
      - main

jobs:
  # sast-scan:
  #   runs-on: ubuntu-latest
  #   name: Run SonarQube with Maven
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: '11'
  #         distribution: 'temurin'
  #         cache: maven

      # - name: Build with Maven and analyze with SonarQube
      #   run: mvn -B verify sonar:sonar -Dsonar.projectKey=rahuls512_Java-App-github-actions -Dsonar.organization=rahuls512 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # sca-scan:
  #   needs: sast-scan
  #   runs-on: ubuntu-latest
  #   name: Maven using Snyk security scan
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/maven@master
  #       continue-on-error: true 
  #       with:
  #         snyk-token: ${{ secrets.SNYK_TOKEN }}

  Build-image-publish-to-github-packages:
    # needs: sca-scan
    runs-on: ubuntu-latest
    name: Build Image Publish to Github Packages
    env:
      repository: ghcr.io/${{ github.repository_owner }}    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          repository: $repository
          username: ${{ secrets.DEVOPS_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: $repository
          REPOSITORY: java-app-01
          IMAGE_TAG: 1.0.0
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Login to GitHub Packages
        uses: docker/login-action@v3  # Updated to use Docker's official login-action
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/java-app-01:1.0.0
  # Image-Scan-with-ECR:
  #   needs: Build-image-publish-to-ecr
  #   runs-on: ubuntu-latest
  #   name: Image Scan with ECR
  #   steps:
  #     - name: Scan Docker image with ECR Scan
  #       uses: alexjurkiewicz/ecr-scan-image@v1.7.1
  #       continue-on-error: true
  #       with:
  #         repository: java-app-01
  #         tag: 1.0.0
  #     - run: echo "${{ steps.docker-scan.outputs.total }} total vulnerabilities."

  # Image-Deploy-to-EKS:
  #   needs: Image-Scan-with-ECR
  #   runs-on: ubuntu-latest
  #   name: Image Deploy to EKS
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Install kubectl
  #       uses: azure/setup-kubectl@v2.0
  #       with:
  #         version: 'v1.27.0'

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-west-1
  #       env:
  #         KUBECONFIG: ${{secrets.KUBE_CONFIG}}  

  #     - name: Update kubeconfig for EKS
  #       run: aws eks update-kubeconfig --name java-app-01 --region us-west-1
    
  #     - name: Verify kubectl configuration
  #       run: kubectl config view          
  
  #     - name: Apply Kubernetes manifests
  #       run: |
  #         kubectl apply -f deployment.yaml
  #         kubectl apply -f service.yaml
      
  # zap_scan:
  #   needs: Image-Deploy-to-EKS
  #   runs-on: ubuntu-latest
  #   name: Scan the web application with ZAP
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         ref: main

  #     - name: ZAP Scan
  #       uses: zaproxy/action-baseline@v0.7.0
  #       with:
  #         docker_name: 'owasp/zap2docker-stable'
  #         target: 'https://devopsautomation-with-rahulsharan.link'
  #         rules_file_name: '.zap/rules.tsv'
  #         cmd_options: '-a'
